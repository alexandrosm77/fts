# Project configuration.
#
# Below are a set of environment variables that will be used by the
# project for various reasons.  The defaults should work well in most
# normal cases, but if you have a special environment, for example if
# something is already running on port 8000, you can change that here.
#
# Please modify this file as necessary, then save it and exit to
# continue installation.

# Any modifications to the resulting `.envrc` file after this point will
# need to be manually approved by running `direnv allow` after saving.
# This is for security reasons.

# Edit the below variables to configure the exposed ports for the
# project as configured by `docker-compose`.
#
# The recommendation is to set these to something random above `1024` to
# make collisions with other projects on the developer's machine
# unlikely.  A common set of ports per project is also recommended.
export DOCKER_DJANGO_PORT=8000
export DOCKER_FLOWER_PORT=5555
export DOCKER_MAILPIT_PORT=8025
export DOCKER_HUGO_PORT=1313

# Edit the below variable to switch databases when working on multiple
# tasks without deleting the database between context switches.
export DJANGO_DATABASES_SCHEMA=django

# Edit and set the below variables to configure the project here.  For a
# listing of options, consult `docker-compose.yml:x-python-env-config`.
#
# Values are JSON-encoded.
export DJANGO_DEBUG='true'

# These values are used to set the UID and GID of docker container users
# which is eventually set on files in persistent storage.
export DOCKER_HOST_UID=$(id -u)
export DOCKER_HOST_GID=$(id -g)

# Makes scripts executable from within the project tree.
export PATH=$PWD/bin:$PATH

# If naked `docker` and/or `docker-compose` are insufficient, they can
# be overridden here - for example if you are not a member of the
# `docker` group for security reasons and must prepend `sudo -E`.
export DOCKER=docker
export DOCKER_COMPOSE=docker-compose

# Other more project-specific variables.
